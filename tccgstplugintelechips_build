#! /bin/bash

BUILD_MODE=$1
PREFIX_MODE=$2
CPU_NUM=$3

function Usage() {
	echo "Usage: $0 [OPTION]..."
	echo
	echo "Configuration:"
	echo "-h, --help              Display this help and exit"
	echo
	echo "For better control, use the options below."
	echo
	echo "Optional features:"
	echo "-d, --debug             Enable debug mode"
	echo "-r, --release           Enable release mode"
	echo " 1, --prebuilts         Local build"
	echo " 2, --download          Board Target build"
	exit 1
}

PREFIX_MENU_CHOICES=(prebuilts download)

#
# File execute permission check
#
if [ ! -x configure ]; then
	chmod +x configure
fi

#
# Check for options
#
gst_opt_debug="--disable-debug"

invalid_args="false"
change_config=no
	case $BUILD_MODE in
	-r | --release)
		gst_opt_debug="--disable-debug"
		;;
	-d | --debug)
		gst_opt_debug=""
		;;
	-h | --help)
		Usage $@
		;;
	*)
		echo "\"$BUILD_MODE\" is invalid argument!"
		echo "Augument is either \"release\" or \"debug\"."
		invalid_args="true"
		;;
	esac

if [ $invalid_args = "true" ]; then
	echo "Please, recheck and try again."
	exit 1
fi

enable_securevideo=$LINUX_PLATFORM_TZTEE

enable_asfdmx=no
gst_opt_asfdmx=""
if [ "${enable_asfdmx}" = "yes" ]; then
gst_opt_asfdmx="--enable-asfdmx"
fi

if [ "${enable_securevideo}" = "true"   ]; then
    opt_securevideo="--enable-securevideo"
fi

#opt_securevideo="--disable-securevideo"

#
# Directory settings
#
current_dir=`pwd`
project_dir=`expr "${current_dir}" : '\(.*\)/gstreamer-1.2.4/.*'`
prebuilts_dir=/prebuilts
download_dir=/$BUILDDIR/gst-plugin-telechips-1.2.4
gst_install_dir='/home/B160035/CLS/ZEUS_master_171124'
if [ "${gst_install_dir:-unset}" = "unset" -o "${gst_install_dir}" != "${project_dir}" ]; then
	change_config=yes
fi

if [ "${change_config}" = "yes" ]; then
	gst_install_dir=`echo ${project_dir} | sed -e 's/\//\\\\\//g'`
	# tccgstplugintelechips_build
	sed -e "s/^gst_opt_debug=.*/gst_opt_debug=\"${gst_opt_debug}\"/; \
			s/^gst_install_dir=.*/gst_install_dir='${gst_install_dir}'/" $0 > temp_build.$$
	chmod +x temp_build.$$
	# Execute tccgstplugintelechips_build
	/bin/bash temp_build.$$ $@
	if [ $? -ne 0 ]; then
		rm -rf temp_build.$$
		exit $?
	fi
	mv -f temp_build.$$ $0
	exit
fi

#
# Check for prefix
#
if (echo -n $PREFIX_MODE | grep -q -e "^[0-9][0-9]*$")
then
	if [ $PREFIX_MODE -le ${#PREFIX_MENU_CHOICES[@]} ]
	then
		selection=${PREFIX_MENU_CHOICES[$(($PREFIX_MODE-1))]}
	fi
fi

if [ "$selection" = "" ]; then
	echo
	echo "Invalid prefix: $PREFIX_MODE"
	exit
elif [ "$selection" = "prebuilts" ]; then
	gst_prefix_dir=${gst_install_dir}${prebuilts_dir}
	echo " 1, --prebuilts         Local build"
elif [ "$selection" = "download" ]; then
	gst_prefix_dir=${gst_install_dir}${download_dir}
	echo " 2, --download          Board Target build"
fi


#
# Create configure script
#
#make distclean
autoreconf -ivf


#
# Configure
#

if [ "$LINUX_PLATFORM_MACHINE" = "tcc892x" ]; then
	chipname="tcc892x"
	#chipname="tcc8925s"
	target_cflag="-mcpu=arm1176jzf-s -mfloat-abi=softfp -mfpu=vfp -DTCC_892x_INCLUDE"
	host_name="arm-none-linux-gnueabi"
	target_name="arm-none-linux-gnueabi"
elif [ "$LINUX_PLATFORM_MACHINE" = "tcc8930" ]; then
	chipname="tcc893x"
	#chipname="tcc8935s"
	target_cflag="-mcpu=arm1176jzf-s -mfloat-abi=softfp -mfpu=vfp -DTCC_893x_INCLUDE"
	host_name="arm-none-linux-gnueabi"
	target_name="arm-none-linux-gnueabi"
elif [ "$LINUX_PLATFORM_MACHINE" = "tcc8960" ]; then
	chipname="tcc896x"
	target_cflag="-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -DTCC_896x_INCLUDE"
	host_name="arm-none-linux-gnueabi"
	target_name="arm-none-linux-gnueabi"
elif [ "$LINUX_PLATFORM_MACHINE" = "tcc8970" ]; then
	chipname="tcc897x"
	target_cflag="-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -DTCC_897x_INCLUDE"
	host_name="arm-none-linux-gnueabi"
	target_name="arm-none-linux-gnueabi"
elif [ "$LINUX_PLATFORM_MACHINE" = "tcc802x" ]; then
    chipname="tcc802x"
	target_cflag="-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -DTCC_802x_INCLUDE"
	host_name="arm-none-linux-gnueabi"
	target_name="arm-none-linux-gnueabi"
elif [ "$LINUX_PLATFORM_MACHINE" = "tcc898x" ]; then
	chipname="tcc898x"
	target_cflag="-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -DTCC_898x_INCLUDE"
	#host_name="arm-unknown-linux-gnueabi"
	#target_name="arm-unknown-linux-gnueabi"
	host_name="arm-none-linux-gnueabi"
	target_name="arm-none-linux-gnueabi"
fi
if [ "$LINUX_PLATFORM_VSYNC_INCLUDE" = "yes" ]; then
    target_cflag+=" -DTCC_VSYNC_INCLUDE"
fi

./configure \
			--build=i686-pc-linux-gnu --host=${host_name} --target=${target_name} \
			--prefix=${gst_prefix_dir} \
			${gstpluginbase_opt_debug} \
            ${opt_securevideo} \
			--disable-jpeg --disable-gconf --disable-gdk-pixbuf --disable-hal --disable-examples \
			--without-x \
			${gst_opt_asfdmx} \
			CPPFLAGS="-I${gst_install_dir}${prebuilts_dir}/include" \
			CFLAGS="$target_cflag" \
			LDFLAGS="-L${gst_install_dir}${prebuilts_dir}/lib" \
			PKG_CONFIG_PATH="${gst_install_dir}${prebuilts_dir}/lib/pkgconfig" \
			SOUP_CFLAGS="-I${gst_install_dir}${prebuilts_dir}/include/libsoup-2.4" \
			SOUP_LIBS="-L${gst_install_dir}${prebuilts_dir}/lib -lsoup-2.4 -lglib-2.0 -lgobject-2.0 -lgio-2.0" \
			PROCESSOR="$chipname"

#
# Compile
#
make $CPU_NUM

#
# Install
#
make install

if [ "$selection" = "download" ]; then
	cp -rf $gst_install_dir/$download_dir/* $gst_install_dir/$BUILDDIR/tccgst/
fi
